{"version":3,"sources":["../node_modules/graphql-language-service-utils/esm sync /^.*/.js$","../node_modules/graphql-language-service-utils/esm sync /^.*/.json$","../node_modules/graphql-language-service-utils/esm lazy /^.*/.js$/ groupOptions: {} namespace object","../node_modules/graphql-language-service-utils/esm lazy /^.*/.json$/ groupOptions: {} namespace object","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyContext","webpackAsyncContext","Promise","then","webpackEmptyAsyncContext","App","url","URL","window","location","href","apiEndpoint","searchParams","get","apiClientId","store","endpoint","tabs","name","query","headers","clientId","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6MAAA,IAAIA,EAAM,CACT,aAAc,GACd,YAAa,GACb,4BAA6B,GAC7B,aAAc,GACd,+BAAgC,KAIjC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kBC1BpB,SAASY,EAAoBb,GAC5B,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEPQ,EAAoBL,KAAO,WAAa,MAAO,IAC/CK,EAAoBH,QAAUG,EAC9BF,EAAOC,QAAUC,EACjBA,EAAoBZ,GAAK,K,oBCRzB,IAAIH,EAAM,CACT,aAAc,GACd,YAAa,GACb,4BAA6B,GAC7B,aAAc,GACd,+BAAgC,KAGjC,SAASgB,EAAoBd,GAC5B,OAAOe,QAAQL,UAAUM,MAAK,WAC7B,IAAIb,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAIP,OAAOF,EADEL,EAAIE,OAIfc,EAAoBN,KAAO,WAC1B,OAAOC,OAAOD,KAAKV,IAEpBgB,EAAoBb,GAAK,IACzBU,EAAOC,QAAUE,G,kBCxBjB,SAASG,EAAyBjB,GAGjC,OAAOe,QAAQL,UAAUM,MAAK,WAC7B,IAAIX,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,KAGRY,EAAyBT,KAAO,WAAa,MAAO,IACpDS,EAAyBP,QAAUO,EACnCN,EAAOC,QAAUK,EACjBA,EAAyBhB,GAAK,K,uGCoDfiB,MAlCf,WACE,IAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,MAE9BC,EAAcL,EAAIM,aAAaC,IAAI,sBAEnCC,EAAcR,EAAIM,aAAaC,IAAI,gCAEzC,OACE,kBAAC,WAAD,CAAUE,MAAOA,SACf,kBAAC,aAAD,CACEC,SAAUL,EACVM,KAAM,CACJ,CACEC,KAAM,gBACNF,SAASL,EACTQ,MAzCQ,6GA0CRC,QAAS,CACPC,SAAUP,IAGd,CACEI,KAAM,eACNF,SAASL,EACTQ,MAtCa,yPAuCbC,QAAS,CACPC,SAAUP,SC3CJQ,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7B,MAAK,SAAA8B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ed46f4a.chunk.js","sourcesContent":["var map = {\n\t\"./Range.js\": 75,\n\t\"./file.js\": 97,\n\t\"./getASTNodeAtPosition.js\": 96,\n\t\"./index.js\": 29,\n\t\"./validateWithCustomRules.js\": 121\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 385;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 386;","var map = {\n\t\"./Range.js\": 75,\n\t\"./file.js\": 97,\n\t\"./getASTNodeAtPosition.js\": 96,\n\t\"./index.js\": 29,\n\t\"./validateWithCustomRules.js\": 121\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 387;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 388;","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Playground, store } from 'graphql-playground-react'\n\nconst workspaceQuery = `\n# Projects in the current workspace\nquery {\n  workspace {\n    projects {\n      name\n    }\n  }\n}\n`\n\nconst sendMetricsMutation = `\n# Send metrics about some event\nmutation {\n  sendMetrics(event:{\n    category: \"prototype\",\n    label: \"initialized\",\n    properties: [\n      {\n        name:\"developer\",\n        value:\"graphmaster@somewhere.com\"\n      }\n    ]\n  })\n}`\n\nfunction App() {\n  const url = new URL(window.location.href);\n  // Url of a graphQL endpoint\n  const apiEndpoint = url.searchParams.get('neo4jDesktopApiUrl');\n  // A Desktop generated token to verify the provided appId\n  const apiClientId = url.searchParams.get('neo4jDesktopGraphAppClientId');\n\n  return (\n    <Provider store={store}>\n      <Playground \n        endpoint={apiEndpoint}\n        tabs={[\n          {\n            name: \"List Projects\",\n            endpoint:apiEndpoint, \n            query:workspaceQuery,\n            headers: {\n              clientId: apiClientId\n            }\n          },\n          {\n            name: \"Send Metrics\",\n            endpoint:apiEndpoint, \n            query:sendMetricsMutation,\n            headers: {\n              clientId: apiClientId\n            }\n          }\n        ]} \n      />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}